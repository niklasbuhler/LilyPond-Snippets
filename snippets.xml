<snippets>

<!--
  Created by Frescobaldi 3.1.3.

  Every snippet is represented by:
    title:      title text
    shortcuts:  list of shortcut elements, every shortcut is a key sequence
    body:       the snippet text

  The snippet id attribute can be the name of a builtin snippet or a random
  name like 'n123456'. In the latter case, the title is used to determine
  whether a snippet is new or updated.
-->

<snippet id="uncomment">
<title>Uncomment</title>
<shortcuts>
<shortcut>Ctrl+Alt+C, Ctrl+Alt+U</shortcut>
</shortcuts>
<body>-*- python; indent: no; menu: comment;
import re

def main():
    text = globals()['text']
    # determine state
    for s in state[::-1]:
        if s in ('lilypond', 'html', 'scheme'):
            break
    else:
        s = 'lilypond'

    def html(text):
        if text:
            text = text.replace('&lt;!-- ', '')
            text = text.replace(' --&gt;', '')
            text = text.replace('&lt;!--', '')
            text = text.replace('--&gt;', '')
            return text

    def lilypond(text):
        if text.lstrip().startswith('%{'):
            if text.lstrip().startswith('%{ '):
                text = text.lstrip()[3:]
            else:
                text = text.lstrip()[2:]
            if text.rstrip().endswith('%}'):
                text = text.rstrip()[:-2]
        else:
            if not text:
                cursor.select(cursor.BlockUnderCursor)
                text = cursor.selection().toPlainText()
            text = re.compile(r'^(\s*)%+ ?', re.M).sub(r'\1', text)
        return text

    def scheme(text):
        return re.compile(r'^(\s*);+', re.M).sub(r'\1', text)

    if s == 'lilypond':
        text = lilypond(text)
    elif s == 'html':
        text = html(text)
    elif s == 'scheme':
        text = scheme(text)

    if text != cursor.selection().toPlainText():
        cursor.insertText(text)

</body>
</snippet>

</snippets>
